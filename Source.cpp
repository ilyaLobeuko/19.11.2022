#include <iostream>
using namespace std;
int sign(double x) {
	if (x < 0)return -1;
	if (x == 0)return 0;
	if (x > 0)return 1;
}
int rootsCount(double A, double B, double C) {
	double D = B * B - 4 * A;
	if (D > 0) return 2;
	if (D == 0) return 1;
	if (D < 0) return 0;
}
int circleS(double R) {
	double S = 3.14 * R * R;
}
int ringS(double R1, double R2) {
	double R;
	double R1 = 3.14 * R * R;
	double R2 = 3.14 * R * R;
}
int main() {
	/*Proc16. Описать функцию sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
    −1, если X < 0; 
    0, если X = 0; 
    1, если X > 0.
	С помощью этой функции найти значение выражения sign(A) + sign(B)
для данных вещественных чисел A и B.

*/
	/*double A, B;
	cin >> A >> B;
	cout << sign(A) << sign(B) << endl;*/

	/*Proc17. Описать функцию rootsCount(A, B, C) целого типа, 
	определяющую количество корней квадратного уравнения 
    A·x^2 + B·x + C = 0 
    (A, B, C — вещественные параметры, A != 0). С ее помощью найти количество корней
    для каждого из трех квадратных уравнений с данными коэффициентами.
    Количество корней определять по значению дискриминанта:
    D = B
    2 − 4·A·C.*/
	/*double A, B, C;
	cin >> A >> B >> C;
	cout << rootsCount(A, B, C) << endl;*/
	
	/*Proc18. Описать функцию circleS(R) вещественного типа, находящую площадь круга радиуса R (R — вещественное). С помощью этой функции
найти площади трех кругов с данными радиусами. Площадь круга радиуса R вычисляется по формуле 
S = π·R^2. В качестве значения π использовать 3.14.*/
	/*for (int i = 1; i <= 3; i++) {
		int R;
		cout << circleS(R) << endl;
	}*/

	/*Proc19. Описать функцию ringS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями с общим центром
и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). 
С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы. 
Воспользоваться формулой площади круга радиуса R: S = π·R2. 
В качестве значения π использовать 3.14.*/
	double R1, R2;
	cin >> R1 >> R2;
	for (int i = 1; i <= 3; i++) {

	} 
	// не успел дорешать.


	return 0;

}